{"version":3,"sources":["firebase/config.js","context/AuthContext.js","hooks/useAuthContext.js","hooks/useCollection.js","components/Avatar.js","components/ProjectList.js","pages/dashboard/ProjectFilter.js","pages/dashboard/Dashboard.js","hooks/useFirestore.js","pages/create/Create.js","hooks/useLogin.js","pages/login/Login.js","hooks/useSignup.js","pages/signup/Signup.js","hooks/useDocument.js","pages/project/ProjectSummary.js","pages/project/ProjectComments.js","pages/project/Project.js","hooks/useLogout.js","assets/temple.svg","components/Navbar.js","assets/dashboard_icon.svg","assets/add_icon.svg","components/Sidebar.js","components/OnlineUsers.js","pages/login/ForgotPassword.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","projectFirestore","firestore","projectAuth","auth","projectStorage","storage","timestamp","Timestamp","AuthContext","createContext","authReducer","state","action","type","_objectSpread","user","payload","authIsReady","AuthContextProvider","_ref","children","_useReducer","useReducer","_useReducer2","_slicedToArray","dispatch","useEffect","unsub","onAuthStateChanged","console","log","_jsx","Provider","value","useAuthContext","context","useContext","Error","useCollection","collection","_query","_orderBy","_useState","useState","_useState2","documents","setDocuments","_useState3","_useState4","error","setError","query","useRef","current","orderBy","_ref2","ref","where","apply","_toConsumableArray","unsubscribe","onSnapshot","snapshot","results","docs","forEach","doc","push","data","id","Avatar","src","className","alt","ProjectList","projects","_jsxs","length","map","project","Link","to","concat","name","dueDate","toDate","toDateString","assignedUsersList","photoURL","filterList","ProjectFilter","changeFilter","currentFilter","setCurrentFilter","f","onClick","newFilter","Dashboard","_useCollection","filter","setFilter","document","assignedToMe","u","uid","category","initialState","isPending","success","firestoreReducer","useFirestore","response","isCancelled","setIsCancelled","dispatchIfNotCancelled","addDocument","_asyncToGenerator","_regeneratorRuntime","mark","_callee","createdAt","addedDocument","wrap","_context","prev","next","fromDate","Date","add","sent","t0","message","stop","_x","arguments","deleteDocument","_callee2","_context2","delete","_x2","updateDocument","_ref3","_callee3","updates","updatedDocument","_context3","update","abrupt","_x3","_x4","categories","label","Create","navigate","useNavigate","_useFirestore","users","setUsers","setName","_useState5","_useState6","details","setDetails","_useState7","_useState8","setDueDate","_useState9","_useState10","setCategory","_useState11","_useState12","assignedUsers","setAssignedUsers","_useState13","_useState14","formError","setFormError","displayName","handleSubmit","e","createdBy","preventDefault","comments","onSubmit","required","onChange","target","Select","option","options","isMulti","useLogin","setIsPending","login","email","password","res","signInWithEmailAndPassword","online","Login","setEmail","setPassword","_useLogin","handleReset","disabled","useSignup","signup","thumbnail","uploadPath","img","imgUrl","createUserWithEmailAndPassword","put","getDownloadURL","updateProfile","set","Signup","setDisplayName","setThumbnail","thumbnailError","setThumbnailError","_useSignup","selected","files","includes","size","useDocument","setDocument","err","ProjectSummary","ProjectComments","uniqueId","uuidv4","newComment","setNewComment","commentToAdd","content","comment","formatDistanceToNow","addSuffix","Project","useParams","_useDocument","useLogout","_useAuthContext","logout","signOut","Navbar","_useLogout","TrackVisibility","isVisible","Temple","_Fragment","Sidebar","NavLink","exact","DashboardIcon","AddIcon","OnlineUsers","ForgotPassword","handleResetSubmit","sendPasswordResetEmail","then","alert","catch","code","Quote","lazy","App","BrowserRouter","Routes","Route","path","element","Navigate","Suspense","fallback","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.525dfb8a.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\nimport 'firebase/storage'\r\n\r\n//Firebase configuration object\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyA_wMJlOVEky5jWNvnfm2D3oXhIUNdd3Os\",\r\n    authDomain: \"sit313-hd-project.firebaseapp.com\",\r\n    projectId: \"sit313-hd-project\",\r\n    storageBucket: \"sit313-hd-project.appspot.com\",\r\n    messagingSenderId: \"385517471562\",\r\n    appId: \"1:385517471562:web:bae9d6a05630dad0cca3b3\"\r\n}\r\n// init firebase\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\n// init services\r\nconst projectFirestore = firebase.firestore()\r\nconst projectAuth = firebase.auth()\r\nconst projectStorage = firebase.storage()\r\n\r\n\r\n// timestamp\r\nconst timestamp = firebase.firestore.Timestamp\r\n\r\nexport { projectFirestore, projectAuth, timestamp, projectStorage }","import { createContext, useReducer, useEffect } from 'react'\nimport { projectAuth } from '../firebase/config'\n\nexport const AuthContext = createContext()\n/**\n * Reducer function for managing the user's authentication state.\n *\n * @param {Object} state - The current state containing user and authIsReady properties.\n * @param {Object} action - The action object that specifies how the state should be updated.\n * @returns {Object} - The new state after applying the action.\n */\nexport const authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return { ...state, user: action.payload }\n    case 'LOGOUT':\n      return { ...state, user: null }\n    case 'AUTH_IS_READY':\n      return { user: action.payload, authIsReady: true }\n    default:\n      return state\n  }\n}\n/**\n * Authentication Context Provider Component.\n *\n * This component provides the authentication context to its children.\n *\n * @param {Object} children - The child components that need access to the authentication context.\n */\nexport const AuthContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, { \n    user: null,\n    authIsReady: false\n  })\n\n  useEffect(() => {\n    const unsub = projectAuth.onAuthStateChanged(user => {\n      dispatch({ type: 'AUTH_IS_READY', payload: user })\n      unsub()\n    })\n  }, [])\n\n  console.log('AuthContext state:', state)\n  //Returing the AuthContextProvider function\n  return (\n    <AuthContext.Provider value={{ ...state, dispatch }}>\n      { children }\n    </AuthContext.Provider>\n  )\n\n}","import { AuthContext } from \"../context/AuthContext\"\nimport { useContext } from \"react\"\n/**\n * Custom Hook: useAuthContext\n *\n * This hook allows components to access the authentication context provided by the AuthContextProvider.\n *\n * @returns {Object} - The authentication context containing user information and authentication state.\n */\nexport const useAuthContext = () => {\n  //Using the useContext hook to use the AuthContext\n  const context = useContext(AuthContext)\n  if(!context) {\n    throw Error('useAuthContext must be used inside an AuthContextProvider')\n  }\n\n  return context\n}","import { useEffect, useState, useRef } from \"react\"\nimport { projectFirestore } from \"../firebase/config\"\n/**\n * Custom Hook: useCollection\n *\n * This hook allows you to fetch and listen to a collection of documents in Firestore.\n *\n * @param {string} collection - The name of the Firestore collection to query.\n * @param {Array} _query - An optional array representing query conditions (e.g., where clauses).\n * @param {Array} _orderBy - An optional array representing order-by conditions for sorting.\n *\n * @returns {Object} - An object containing the documents from the collection and any potential error.\n */\nexport const useCollection = (collection, _query, _orderBy) => {\n  //Creating a state for documents\n  const [documents, setDocuments] = useState(null)\n  //Creating a state for the error\n  const [error, setError] = useState(null)\n\n  // if we don't use a ref --> infinite loop in useEffect\n  // _query is an array and is \"different\" on every function call\n  const query = useRef(_query).current\n  const orderBy = useRef(_orderBy).current\n\n  useEffect(() => {\n    let ref = projectFirestore.collection(collection)\n\n    if (query) {\n      ref = ref.where(...query)\n    }\n    if (orderBy) {\n      ref = ref.orderBy(...orderBy)\n    }\n\n    const unsubscribe = ref.onSnapshot(snapshot => {\n      let results = []\n      snapshot.docs.forEach(doc => {\n        results.push({...doc.data(), id: doc.id})\n      });\n      \n      // update state\n      setDocuments(results)\n      setError(null)\n    }, error => {\n      console.log(error)\n      setError('could not fetch the data')\n    })\n\n    // unsubscribe on unmount\n    return () => unsubscribe()\n\n  }, [collection, query, orderBy])\n\n  return { documents, error }\n}","import \"./Avatar.css\"\r\nimport React from 'react'\r\n\r\nfunction Avatar({src}) {\r\n  //returning the template\r\n  return (\r\n    <div className=\"avatar\">\r\n       <img src={src} alt=\"user avatar\"/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Avatar","import { Link } from \"react-router-dom\"\r\nimport \"./ProjectList.css\"\r\nimport React from 'react'\r\nimport Avatar from \"./Avatar\"\r\n/**\r\n * ProjectList Component\r\n *\r\n * This component is responsible for displaying a list of projects, including their names,\r\n * due dates, and assigned users.\r\n *\r\n * @param {Array} projects - An array of projects to be displayed in the list.\r\n */\r\nfunction ProjectList({projects}) {\r\n  return (\r\n    <div className=\"project-list\">\r\n        {projects.length===0  && <p>No projects yet!</p>}\r\n        {/* We need a key component for each project because we output it as a parameter */}\r\n        {projects.map(project=>(\r\n            <Link to={`/projects/${project.id}`} key={project.id}>\r\n                <h4>{project.name}</h4>\r\n                <p>Due by : {project.dueDate.toDate().toDateString()}</p>\r\n               <div className=\"assigned-to\">\r\n                <ul>\r\n                {project.assignedUsersList.map(user=>(\r\n                <li key={user.photoURL}>\r\n                        <Avatar src={user.photoURL}/>\r\n                </li>\r\n                ))}\r\n                </ul>\r\n               </div>\r\n            </Link>\r\n        ))}\r\n    </div>\r\n  )\r\n}\r\nexport default ProjectList","import { useState } from 'react'\r\n//Creating an array for different array\r\nconst filterList = ['all', 'mine', 'development', 'design', 'marketing', 'sales']\r\n//This function accepts a prop that is the new filter\r\nexport default function ProjectFilter({ changeFilter }) {\r\n    //using a state variable for keeping track of filter\r\n    const [currentFilter, setCurrentFilter] = useState('all')\r\n\r\n    //Creating an event handler function to change the filter\r\n    const handleClick = (newFilter) => {\r\n        setCurrentFilter(newFilter)\r\n        changeFilter(newFilter)\r\n    }\r\n    //returning the template\r\n    return (\r\n        <div className=\"project-filter\">\r\n            <nav>\r\n                <p>Filter by: </p>\r\n                {filterList.map((f) => (\r\n                    <button key={f}\r\n                        onClick={() => handleClick(f)}\r\n                        className={currentFilter === f ? 'active' : ''}\r\n                    >{f}</button>\r\n                ))}\r\n            </nav>\r\n        </div>\r\n    )\r\n}","import { useCollection } from '../../hooks/useCollection'\r\nimport { useState } from 'react'\r\nimport { useAuthContext } from '../../hooks/useAuthContext'\r\n\r\n// components\r\nimport ProjectList from '../../components/ProjectList'\r\nimport ProjectFilter from './ProjectFilter'\r\n\r\n// styles\r\nimport './Dashboard.css'\r\n\r\nexport default function Dashboard() {\r\n  //destructuring the user object from useAuthContext hook\r\n  const { user } = useAuthContext()\r\n\r\n  //destructuring the user documents and error from useCollections hook\r\n  const { documents, error } = useCollection('projects')\r\n\r\n  //Making the state for filter function\r\n  const [filter, setFilter] = useState('all')\r\n\r\n  //Function for changing the filter \r\n  const changeFilter = (newFilter) => {\r\n    setFilter(newFilter)\r\n  }\r\n\r\n  //Filtering the projects by using the filter function\r\n  const projects = documents ? documents.filter(document => {\r\n    //using switch case for filtering the projects\r\n    switch (filter) {\r\n      case 'all':\r\n        return true\r\n      case 'mine':\r\n        let assignedToMe = false\r\n        document.assignedUsersList.forEach(u => {\r\n          if (u.id === user.uid) {\r\n            assignedToMe = true\r\n          }\r\n        })\r\n        return assignedToMe\r\n      case 'development':\r\n      case 'design':\r\n      case 'sales':\r\n      case 'marketing':\r\n        console.log(document.category, filter)\r\n        return document.category === filter\r\n      default:\r\n        return true\r\n    }\r\n  }) : null\r\n\r\n  //returning the template\r\n  return (\r\n    <div>\r\n      <h2 className=\"page-title\">Dashboard</h2>\r\n      {error && <p className=\"error\">{error}</p>}\r\n      {documents && <ProjectFilter changeFilter={changeFilter} />}\r\n      {projects && <ProjectList projects={projects} />}\r\n    </div>\r\n  )\r\n}","import { useReducer, useEffect, useState } from \"react\"\nimport { projectFirestore, timestamp } from \"../firebase/config\"\n\nlet initialState = {\n  document: null,\n  isPending: false,\n  error: null,\n  success: null\n}\n/**\n * Reducer function for managing the state of Firestore operations.\n *\n * @param {Object} state - The current state containing document, isPending, error, and success properties.\n * @param {Object} action - The action object that specifies how the state should be updated.\n * @returns {Object} - The new state after applying the action.\n */\nconst firestoreReducer = (state, action) => {\n  switch (action.type) {\n    case 'IS_PENDING':\n      return { isPending: true, document: null, success: false, error: null }\n    case 'ADDED_DOCUMENT':\n      return { isPending: false, document: action.payload, success: true, error: null }\n    case 'DELETED_DOCUMENT':\n      return { isPending: false, document: null, success: true, error: null }\n    case 'UPDATED_DOCUMENT':\n      return { isPending: false, document: action.payload, success: true, error: null }\n    case 'ERROR':\n      return { isPending: false, document: null, success: false, error: action.payload }\n    default:\n      return state\n  }\n}\n/**\n * Custom Hook: useFirestore\n *\n * This hook provides methods to add, delete, and update documents in a Firestore collection.\n *\n * @param {string} collection - The name of the Firestore collection to interact with.\n *\n * @returns {Object} - An object containing the addDocument, deleteDocument, updateDocument functions,\n * and the response object with information about the operation status.\n */\nexport const useFirestore = (collection) => {\n  const [response, dispatch] = useReducer(firestoreReducer, initialState)\n  const [isCancelled, setIsCancelled] = useState(false)\n\n  // collection ref\n  const ref = projectFirestore.collection(collection)\n\n  // only dispatch is not cancelled\n  const dispatchIfNotCancelled = (action) => {\n    if (!isCancelled) {\n      dispatch(action)\n    }\n  }\n\n  // add a document\n  const addDocument = async (doc) => {\n    dispatch({ type: 'IS_PENDING' })\n\n    try {\n      const createdAt = timestamp.fromDate(new Date())\n      const addedDocument = await ref.add({ ...doc, createdAt })\n      dispatchIfNotCancelled({ type: 'ADDED_DOCUMENT', payload: addedDocument })\n    }\n    catch (err) {\n      dispatchIfNotCancelled({ type: 'ERROR', payload: err.message })\n    }\n  }\n\n  // delete a document\n  const deleteDocument = async (id) => {\n    dispatch({ type: 'IS_PENDING' })\n\n    try {\n      await ref.doc(id).delete()\n      dispatchIfNotCancelled({ type: 'DELETED_DOCUMENT' })\n    }\n    catch (err) {\n      dispatchIfNotCancelled({ type: 'ERROR', payload: 'could not delete' })\n    }\n  }\n\n  const updateDocument = async (id,updates)=>{\n    dispatch({type:'IS_PENDING'})\n    try {\n      const updatedDocument = await ref.doc(id).update(updates)\n      dispatchIfNotCancelled({type:'UPDATED_DOCUMENT',payload:updatedDocument})\n      return updatedDocument\n    }\n    catch(err)\n    {\n      dispatchIfNotCancelled({type:'ERROR',payload:err.message})\n      return null\n    }\n\n  }\n  useEffect(() => {\n    return () => setIsCancelled(true)\n  }, [])\n\n  return { addDocument, deleteDocument, updateDocument ,response }\n\n}\n\n","import { useState, useEffect } from 'react'\r\nimport { useCollection } from '../../hooks/useCollection'\r\nimport { useAuthContext } from '../../hooks/useAuthContext'\r\nimport { timestamp } from '../../firebase/config'\r\nimport { useFirestore } from '../../hooks/useFirestore'\r\nimport { useNavigate } from 'react-router'\r\nimport Select from 'react-select'\r\n\r\n// styles\r\nimport './Create.css'\r\n//Different categories for the filter\r\nconst categories = [\r\n  { value: 'development', label: 'Development' },\r\n  { value: 'design', label: 'Design' },\r\n  { value: 'sales', label: 'Sales' },\r\n  { value: 'marketing', label: 'Marketing' },\r\n]\r\n\r\n/**\r\n * Component: Create\r\n *\r\n * This component allows users to create a new project. It includes a form for\r\n * specifying project details such as name, description, due date, category, and\r\n * assigned users.\r\n *\r\n * @returns {JSX.Element} - The JSX element representing the Create component.\r\n */\r\nexport default function Create() {\r\n  const navigate = useNavigate()\r\n  const { addDocument, response } = useFirestore('projects')\r\n  const { user } = useAuthContext()\r\n  const { documents } = useCollection('users')\r\n  const [users, setUsers] = useState([])\r\n\r\n  // form field values\r\n  const [name, setName] = useState('')\r\n  const [details, setDetails] = useState('')\r\n  const [dueDate, setDueDate] = useState('')\r\n  const [category, setCategory] = useState('')\r\n  const [assignedUsers, setAssignedUsers] = useState([])\r\n  const [formError, setFormError] = useState(null)\r\n\r\n  // create user values for react-select\r\n  useEffect(() => {\r\n    if (documents) {\r\n      setUsers(documents.map(user => {\r\n        return { value: { ...user, id: user.id }, label: user.displayName }\r\n      }))\r\n    }\r\n  }, [documents])\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    setFormError(null)\r\n\r\n    if (!category) {\r\n      setFormError('Please select a project category.')\r\n      return\r\n    }\r\n    if (assignedUsers.length < 1) {\r\n      setFormError('Please assign the project to at least 1 user')\r\n      return\r\n    }\r\n\r\n    const assignedUsersList = assignedUsers.map(u => {\r\n      return {\r\n        displayName: u.value.displayName,\r\n        photoURL: u.value.photoURL,\r\n        id: u.value.id\r\n      }\r\n    })\r\n    const createdBy = {\r\n      displayName: user.displayName,\r\n      photoURL: user.photoURL,\r\n      id: user.uid\r\n    }\r\n\r\n    const project = {\r\n      name,\r\n      details,\r\n      assignedUsersList,\r\n      createdBy,\r\n      category: category.value,\r\n      dueDate: timestamp.fromDate(new Date(dueDate)),\r\n      comments: []\r\n    }\r\n\r\n    await addDocument(project)\r\n    if (!response.error) {\r\n      navigate('/')\r\n    }\r\n  }\r\n  //returning the template\r\n  return (\r\n    <div className=\"create-form\">\r\n      <h2 className=\"page-title\">Create a new Project</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          <span>Project name:</span>\r\n          <input\r\n            required\r\n            type=\"text\"\r\n            onChange={(e) => setName(e.target.value)}\r\n            value={name}\r\n          />\r\n        </label>\r\n        <label>\r\n          <span>Project Details:</span>\r\n          <textarea\r\n            required\r\n            onChange={(e) => setDetails(e.target.value)}\r\n            value={details}\r\n          ></textarea>\r\n        </label>\r\n        <label>\r\n          <span>Set due date:</span>\r\n          <input\r\n            required\r\n            type=\"date\"\r\n            onChange={(e) => setDueDate(e.target.value)}\r\n            value={dueDate}\r\n          />\r\n        </label>\r\n        <label>\r\n          <span>Project category:</span>\r\n          <Select\r\n            onChange={(option) => setCategory(option)}\r\n            options={categories}\r\n          />\r\n        </label>\r\n        <label>\r\n          <span>Assign to:</span>\r\n          <Select\r\n            onChange={(option) => setAssignedUsers(option)}\r\n            options={users}\r\n            isMulti\r\n          />\r\n        </label>\r\n\r\n        <button className=\"btn\">Add Project</button>\r\n\r\n        {formError && <p className=\"error\">{formError}</p>}\r\n      </form>\r\n    </div>\r\n  )\r\n}","import { useState, useEffect } from 'react'\nimport { projectAuth, projectFirestore } from '../firebase/config'\nimport { useAuthContext } from './useAuthContext'\n/**\n * Custom Hook: useLogin\n *\n * This hook provides functions and state for user login and manages the login process.\n *\n * @returns {Object} - An object containing the login function, isPending state, and error state.\n */\nexport const useLogin = () => {\n  const [isCancelled, setIsCancelled] = useState(false)\n  const [error, setError] = useState(null)\n  const [isPending, setIsPending] = useState(false)\n  const { dispatch } = useAuthContext()\n/**\n   * Function to perform user login.\n   *\n   * @param {string} email - The user's email for authentication.\n   * @param {string} password - The user's password for authentication.\n   */\n  const login = async (email, password) => {\n    setError(null)\n    setIsPending(true)\n  \n    try {\n      // login\n      const res = await projectAuth.signInWithEmailAndPassword(email, password)\n      //update online status\n      //we are using the object of firestore and referencing a particular collectioncalled users \n      //and inside that we are referencing a particular document and updating it\n      await projectFirestore.collection('users').doc(res.user.uid).update({ online: true })\n      // dispatch login action\n      dispatch({ type: 'LOGIN', payload: res.user })\n\n      if (!isCancelled) {\n        setIsPending(false)\n        setError(null)\n      }\n    } \n    catch(err) {\n      if (!isCancelled) {\n        setError(err.message)\n        setIsPending(false)\n      }\n    }\n  }\n\n  useEffect(() => {\n    return () => setIsCancelled(true)\n  }, [])\n\n  return { login, isPending, error }\n}","//Importing the hooks\r\nimport { useState } from 'react'\r\nimport { useLogin } from '../../hooks/useLogin'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\n// styles\r\nimport './Login.css'\r\n/**\r\n * Login Component\r\n *\r\n * This component represents a login form where users can enter their email and password\r\n * to log in. It utilizes state management, hooks, and React Router for navigation.\r\n */\r\nexport default function Login() {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const { login, error, isPending } = useLogin()\r\n  const navigate = useNavigate()\r\n\r\n  /**\r\n  * This function handes form submission\r\n  *\r\n  * @param {Event} e - The form submission event\r\n  */\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    login(email, password)\r\n  }\r\n\r\n  /**\r\n   * Handle \"Forgot Password\" button click\r\n   * Navigates to the password reset page.\r\n   *\r\n   * @param {Event} e - The button click event\r\n   */\r\n  const handleReset = async(e)=>{\r\n    navigate(\"/reset\")\r\n  }\r\n  //returning the template\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"auth-form\">\r\n      <h2>login</h2>\r\n      <label>\r\n        <span>email:</span>\r\n        <input\r\n          required\r\n          type=\"email\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          value={email}\r\n        />\r\n      </label>\r\n      <label>\r\n        <span>password:</span>\r\n        <input\r\n          required\r\n          type=\"password\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          value={password}\r\n        />\r\n      </label>\r\n      {!isPending && <button className=\"btn\">Log in</button>}\r\n      {!isPending && <button className=\"btn resetbtn\" onClick={handleReset}>Forgot Password</button>}\r\n      {isPending && <button className=\"btn\" disabled>loading</button>}\r\n      {error && <div className=\"error\">{error}</div>}\r\n    </form>\r\n  )\r\n}","import { useState, useEffect } from 'react'\nimport { projectAuth ,projectStorage,projectFirestore} from '../firebase/config'\nimport { useAuthContext } from './useAuthContext'\n/**\n * Custom Hook: useSignup\n *\n * This hook provides functions and state for user signup and manages the signup process.\n *\n * @returns {Object} - An object containing the signup function, error state, and isPending state.\n */\nexport const useSignup = () => {\n  const [isCancelled, setIsCancelled] = useState(false)\n  const [error, setError] = useState(null)\n  const [isPending, setIsPending] = useState(false)\n  const { dispatch } = useAuthContext()\n  /**\n     * Function to perform user signup.\n     *\n     * @param {string} email - The user's email for authentication.\n     * @param {string} password - The user's password for authentication.\n     * @param {string} displayName - The user's display name.\n     * @param {File} thumbnail - The user's profile thumbnail image file.\n     */\n  const signup = async (email, password, displayName,thumbnail) => {\n    setError(null)\n    setIsPending(true)\n  \n    try {\n      // signup\n      const res = await projectAuth.createUserWithEmailAndPassword(email, password)\n\n      if (!res) {\n        throw new Error('Could not complete signup')\n      }\n      //update user thumbnail\n      //$ sign is because the thumbnail.name and res.user.uid property will change dynamically\n      const uploadPath = `thumbnails/${res.user.uid}/${thumbnail.name}`\n      const img = await projectStorage.ref(uploadPath).put(thumbnail)\n      const imgUrl = await img.ref.getDownloadURL();\n      // add display name to user\n      await res.user.updateProfile({ displayName ,photoURL:imgUrl})\n      //create user document\n      await projectFirestore.collection(\"users\").doc(res.user.uid).set({\n        online:true,\n        displayName:displayName,\n        photoURL:imgUrl\n      })\n      // dispatch login action\n      dispatch({ type: 'LOGIN', payload: res.user })\n\n      if (!isCancelled) {\n        setIsPending(false)\n        setError(null)\n      }\n    } \n    catch(err) {\n      if (!isCancelled) {\n        setError(err.message)\n        setIsPending(false)\n      }\n    }\n  }\n\n  useEffect(() => {\n    return () => setIsCancelled(true)\n  }, [])\n\n  return { signup, error, isPending }\n}","import { useState } from 'react'\r\nimport { useSignup } from '../../hooks/useSignup'\r\n\r\n// styles\r\nimport './Signup.css'\r\n/**\r\n * Component: Signup\r\n *\r\n * This component provides a sign-up form for new users. Users can enter their\r\n * email, password, display name, and upload a profile thumbnail. Upon submission,\r\n * a new user account is created.\r\n *\r\n * @returns {JSX.Element} - The JSX element representing the Signup component.\r\n */\r\nexport default function Signup() {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [displayName, setDisplayName] = useState('')\r\n    const [thumbnail, setThumbnail] = useState(null)\r\n    const [thumbnailError, setThumbnailError] = useState(null)\r\n    const {signup, isPending, error} = useSignup()\r\n     /**\r\n     * Function to handle the form submission for signing up a new user.\r\n     *\r\n     * @param {Event} e - The form submit event.\r\n     */\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log(email, password, displayName, thumbnail)\r\n        signup(email, password, displayName, thumbnail)\r\n    }\r\n    /**\r\n    * This function uploads the image uploaded by the user into the firebase storage\r\n    *\r\n    * @param {Event} e - The file input change event.\r\n    */\r\n    const handleFileChange = (e) => {\r\n        setThumbnail(null)\r\n        let selected = e.target.files[0]\r\n        console.log(selected)\r\n        \r\n        if (!selected) {\r\n            setThumbnailError('Please select a file')\r\n            return\r\n        }\r\n        if (!selected.type.includes('image')) {\r\n            setThumbnailError('Selected file must be an image')\r\n            return\r\n        }\r\n        if (selected.size > 100000) {\r\n            setThumbnailError('Image file size must be less than 100kb')\r\n            return\r\n        }\r\n\r\n        setThumbnailError(null)\r\n        setThumbnail(selected)\r\n        console.log('thumbnail updated')\r\n    }\r\n    //returing the template\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"auth-form\">\r\n            <h2>sign up</h2>\r\n            <label>\r\n                <span>email:</span>\r\n                <input\r\n                    required\r\n                    type=\"email\"\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    value={email}\r\n                />\r\n            </label>\r\n            <label>\r\n                <span>password:</span>\r\n                <input\r\n                    required\r\n                    type=\"password\"\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    value={password}\r\n                />\r\n            </label>\r\n            <label>\r\n                <span>display name:</span>\r\n                <input\r\n                    required\r\n                    type=\"text\"\r\n                    onChange={(e) => setDisplayName(e.target.value)}\r\n                    value={displayName}\r\n                />\r\n            </label>\r\n            <label>\r\n                <span>Profile thumbnail:</span>\r\n                <input\r\n                    required\r\n                    type=\"file\"\r\n                    onChange={handleFileChange}\r\n                />\r\n                {thumbnailError && <div className=\"error\">{thumbnailError}</div>}\r\n            </label>\r\n            {!isPending && <button className=\"btn\">Sign up</button>}\r\n            {isPending && <button className=\"btn\" disabled>loading</button>}\r\n            {error && <div className='error'>{error}</div>}\r\n        </form>\r\n    )\r\n}","//new \r\nimport { useEffect, useState } from \"react\"\r\nimport { projectFirestore } from \"../firebase/config\"\r\n/**\r\n * Custom Hook: useDocument\r\n *\r\n * This hook allows you to fetch and listen to a single document in a Firestore collection.\r\n *\r\n * @param {string} collection - The name of the Firestore collection containing the document.\r\n * @param {string} id - The ID of the document to fetch.\r\n *\r\n * @returns {Object} - An object containing the document data and any potential error.\r\n */\r\nexport const useDocument = (collection, id) => {\r\n    const [document, setDocument] = useState(null)\r\n    const [error, setError] = useState(null)\r\n\r\n    // realtime document data\r\n    useEffect(() => {\r\n        const ref = projectFirestore.collection(collection).doc(id)\r\n\r\n        const unsubscribe = ref.onSnapshot(snapshot => {\r\n            // need to make sure the doc exists & has data\r\n            if (snapshot.data()) {\r\n                setDocument({ ...snapshot.data(), id: snapshot.id })\r\n                setError(null)\r\n            }\r\n            else {\r\n                setError('No such document exists')\r\n            }\r\n        }, err => {\r\n            console.log(err.message)\r\n            setError('failed to get document')\r\n        })\r\n\r\n        // unsubscribe on unmount\r\n        return () => unsubscribe()\r\n\r\n    }, [collection, id])\r\n\r\n    return { document, error }\r\n}","import Avatar from \"../../components/Avatar\"\r\nimport { useAuthContext } from \"../../hooks/useAuthContext\"\r\nimport { useFirestore } from \"../../hooks/useFirestore\"\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\n/**\r\n * ProjectSummary Component\r\n *\r\n * This component is responsible for displaying a summary of a project, including its\r\n * name, creator, due date, details, assigned users, and an option to mark the project as complete.\r\n *\r\n * @param {Object} project - The project details to be summarized.\r\n */\r\nexport default function ProjectSummary({ project }) {\r\n    const { deleteDocument } = useFirestore('projects')\r\n    const { user } = useAuthContext()\r\n    const navigate = useNavigate()\r\n\r\n    /**\r\n    * This function handles the click event to mark the project as complete\r\n    *\r\n    * @param {Event} e - The click event on the \"Mark as Complete\" button.\r\n    */\r\n    const handleClick = (e) => {\r\n        deleteDocument(project.id)\r\n        navigate('/')\r\n    }\r\n    //returning the template\r\n    return (\r\n        <div>\r\n            <div className=\"project-summary\">\r\n                <h2 className=\"page-title\">{project.name}</h2>\r\n                <p>By : {project.createdBy.displayName}</p>\r\n                <p className=\"due-date\">\r\n                    Project due by {project.dueDate.toDate().toDateString()}\r\n                </p>\r\n                <p className=\"details\">\r\n                    {project.details}\r\n                </p>\r\n                <h4>Project assigned to:</h4>\r\n                <div className=\"assigned-users\">\r\n                    {project.assignedUsersList.map(user => (\r\n                        <div key={user.id}>\r\n                            <Avatar src={user.photoURL} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            {user.uid === project.createdBy.id && (\r\n                <button className=\"btn\" onClick={handleClick}>Mark as Complete</button>\r\n            )}\r\n        </div>\r\n    )\r\n}","import { useState } from \"react\"\r\nimport { timestamp } from \"../../firebase/config\"\r\nimport { useAuthContext } from \"../../hooks/useAuthContext\"\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { useFirestore } from \"../../hooks/useFirestore\";\r\nimport Avatar from \"../../components/Avatar\";\r\nimport formatDistanceToNow from \"date-fns/formatDistanceToNow\";\r\n/**\r\n * ProjectComments Component\r\n *\r\n * This component is responsible for displaying project comments and allowing users\r\n * to add new comments to a project. It also utilizes user authentication and date formatting.\r\n *\r\n * @param {Object} project - The project for which comments are displayed and added.\r\n */\r\nexport default function ProjectComments({ project }) {\r\n    //Destructuring the updateDocument and response from useFirestore hook\r\n    const { updateDocument, response } = useFirestore('projects')\r\n\r\n    //Generating a new id for the user\r\n    const uniqueId = uuidv4();\r\n\r\n    //Destructuring the user object from useAuthcontext\r\n    const { user } = useAuthContext()\r\n\r\n    //Using a state variable for comments\r\n    const [newComment, setNewComment] = useState('')\r\n\r\n    /**\r\n     * This function handles the posting of a new comment\r\n     *\r\n     * @param {Event} e - The form submission event.\r\n     */\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const commentToAdd = {\r\n            displayName: user.displayName,\r\n            photoURL: user.photoURL,\r\n            content: newComment,\r\n            createdAt: timestamp.fromDate(new Date()),\r\n            id: uniqueId,\r\n        }\r\n        //We are updating the documents and firstly we are spreading through the previous comments and \r\n        //including them and then we are adding new comments which are stored in \r\n        //commentToAdd\r\n        await updateDocument(project.id, {\r\n            comments: [...project.comments, commentToAdd]\r\n        })\r\n        //The comment box becomes empty after the new comment is added\r\n        if (!response.error) {\r\n            setNewComment(\"\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"project-comments\">\r\n            <h4>Project Comments</h4>\r\n            {/* Displaying the comments */}\r\n            <ul>\r\n                {project.comments.length > 0 && project.comments.map(comment => (\r\n                    <li key={comment.id}>\r\n                        <div className=\"comment-author\">\r\n                            <Avatar src={comment.photoURL} />\r\n                            <p>{comment.displayName}</p>\r\n                        </div>\r\n                        <div className=\"comment-date\">\r\n                            <p>{formatDistanceToNow(comment.createdAt.toDate(), { addSuffix: true })}</p>\r\n                        </div>\r\n                        <div className=\"comment-content\">\r\n                            {comment.content}\r\n                        </div>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <form className=\"add-comment\" onSubmit={handleSubmit}>\r\n                <label>\r\n                    <span>Add new comment:</span>\r\n                    <textarea\r\n                        required\r\n                        onChange={(e) => setNewComment(e.target.value)}\r\n                        value={newComment}\r\n                    ></textarea>\r\n                </label>\r\n                <button className=\"btn\">Add Comment</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import { useParams } from \"react-router-dom\"\r\nimport { useDocument } from '../../hooks/useDocument'\r\n\r\n// styles\r\nimport './Project.css'\r\nimport ProjectSummary from \"./ProjectSummary\"\r\nimport ProjectComments from \"./ProjectComments\"\r\n/**\r\n * Project Component\r\n *\r\n * This component is responsible for displaying detailed information about a project\r\n * based on the project's ID obtained from the URL parameters. It uses the 'useParams'\r\n * hook to retrieve the project ID and the 'useDocument' hook to fetch project data.\r\n */\r\nexport default function Project() {\r\n  const { id } = useParams()\r\n  //destructuring the document and error from useDocument\r\n  const { document, error } = useDocument('projects', id)\r\n  //Displaying the error\r\n  if (error) {\r\n    return <div className=\"error\">{error}</div>\r\n  }\r\n\r\n  //Displaying the loading component \r\n  if (!document) {\r\n    return <div className=\"loading\">Loading...</div>\r\n  }\r\n  //returning template\r\n  return (\r\n    <div className=\"project-details\">\r\n      <ProjectSummary project={document} />\r\n      <ProjectComments project={document} />\r\n    </div>\r\n  )\r\n}","import { useEffect, useState } from 'react'\nimport { projectAuth,projectFirestore } from '../firebase/config'\nimport { useAuthContext} from './useAuthContext'\n/**\n * Custom Hook: useLogout\n *\n * This hook provides functions and state for user logout and manages the logout process.\n *\n * @returns {Object} - An object containing the logout function, error state, and isPending state.\n */\nexport const useLogout = () => {\n  const [isCancelled, setIsCancelled] = useState(false)\n  const [error, setError] = useState(null)\n  const [isPending, setIsPending] = useState(false)\n  const { dispatch,user } = useAuthContext()\n  //Function for logging out the user\n  const logout = async () => {\n    setError(null)\n    setIsPending(true)\n\n    try {\n      //update online status\n      const {uid} = user\n      //we are using the object of firestore and referencing a particular collectioncalled users \n      //and inside that we are referencing a particular document and updating it\n      await projectFirestore.collection('users').doc(uid).update({online:false})\n      // sign the user out\n      await projectAuth.signOut()\n      \n      // dispatch logout action\n      dispatch({ type: 'LOGOUT' })\n\n      // update state\n      if (!isCancelled) {\n        setIsPending(false)\n        setError(null)\n      } \n    } \n    catch(err) {\n      if (!isCancelled) {\n        setError(err.message)\n        setIsPending(false)\n      }\n    }\n  }\n\n  useEffect(() => {\n    return () => setIsCancelled(true)\n  }, [])\n\n  return { logout, error, isPending }\n}","export default __webpack_public_path__ + \"static/media/temple.c57f882d.svg\";","import { Link } from 'react-router-dom'\r\nimport { useLogout } from '../hooks/useLogout'\r\nimport { useAuthContext } from '../hooks/useAuthContext'\r\nimport 'animate.css';\r\nimport TrackVisibility from 'react-on-screen';\r\n\r\n// styles & images\r\nimport './Navbar.css'\r\nimport Temple from '../assets/temple.svg'\r\n/**\r\n * Navbar Component\r\n *\r\n * This component represents the navigation bar of the application. It includes the application logo,\r\n * login and signup links when the user is not logged in, and a logout button when the user is logged in.\r\n */\r\nexport default function Navbar() {\r\n    const { logout, isPending } = useLogout();\r\n    const { user } = useAuthContext();\r\n    return (\r\n        <nav className=\"navbar\">\r\n\r\n            <ul>\r\n                <TrackVisibility className='logo'>\r\n                    {({ isVisible }) =>\r\n                        <div className={isVisible ? \"animate__animated animate__fadeInDown\" : \"\"} >\r\n                            <li className=\"logo\">\r\n                                <img src={Temple} alt=\"dojo logo\" />\r\n                                <span>Manage it Well!</span>\r\n                            </li>\r\n                        </div>\r\n                    }\r\n                </TrackVisibility>\r\n\r\n                {/* If the user is not logged in or signed up we will \r\n                show these navlinks */}\r\n                {!user && (\r\n                    <>\r\n                        <li><Link to=\"/login\">Login</Link></li>\r\n                        <li><Link to=\"/signup\">Signup</Link></li>\r\n                    </>\r\n                )}\r\n                {user && (\r\n                    <li>\r\n\r\n                        {/* This button will only be shown if we are not currently trying to logout\r\n                which means that is pending is false */}\r\n                        {!isPending && <button className=\"btn\" onClick={logout}>Logout</button>}\r\n                        {/* When we click on logout button then isPending becomes true for some time.\r\n                    That time user will be shown a differnt button  */}\r\n                        {isPending && <button className=\"btn\">Logging out...</button>}\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </nav>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/dashboard_icon.bc800f3b.svg\";","export default __webpack_public_path__ + \"static/media/add_icon.376e9b6a.svg\";","import { NavLink } from \"react-router-dom\"\r\nimport { useAuthContext } from \"../hooks/useAuthContext\"\r\n// styles & images\r\nimport \"./Sidebar.css\"\r\nimport DashboardIcon from '../assets/dashboard_icon.svg'\r\nimport AddIcon from '../assets/add_icon.svg'\r\nimport Avatar from \"./Avatar\"\r\n/**\r\n * Sidebar Component\r\n *\r\n * This component represents the sidebar of the application, providing navigation links to the\r\n * dashboard, project creation, and a motivational quotes page. It also displays the user's avatar\r\n * and display name.\r\n */\r\nexport default function Sidebar() {\r\n    //Destructuring the user object from useAuthContext hook\r\n    const {user} =useAuthContext()\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar-content\">\r\n                <div className=\"user\">\r\n                    {/* Displaying the user's avatar */}\r\n                    <Avatar src={user.photoURL}/>\r\n                    <p>Hey {user.displayName}</p>\r\n                </div>\r\n                <nav className=\"links\">\r\n                    <ul>\r\n                        {/* Navigation link for navigating to the dashboard */}\r\n                        <li>\r\n                            <NavLink exact to=\"/\">\r\n                                <img src={DashboardIcon} alt=\"dashboard icon\" />\r\n                                <span>Dashboard</span>\r\n                            </NavLink>\r\n                        </li>\r\n                        {/* Navigation link for navigating to the Create page  */}\r\n                        <li>\r\n                            <NavLink to=\"/create\">\r\n                                <img src={AddIcon} alt=\"add project icon\" />\r\n                                <span>New Project</span>\r\n                            </NavLink>\r\n                        </li>\r\n                        {/* Navigation link for navigating to the Quotes page  */}\r\n                        <li>\r\n                            <NavLink to=\"/quote\">\r\n                                <img src={AddIcon} alt=\"add project icon\" />\r\n                                <span>Get Some Motivation</span>\r\n                            </NavLink>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useCollection } from \"../hooks/useCollection\"\r\nimport Avatar from \"./Avatar\"\r\nimport \"./OnlineUsers.css\"\r\nimport React from 'react'\r\n/**\r\n * OnlineUsers Component\r\n *\r\n * This component displays a list of online users, including their avatars and display names.\r\n */\r\nfunction OnlineUsers() {\r\n    //destructuring the documents and error from UseCollection hook\r\n    const { documents, error } = useCollection('users')\r\n    //returning the template\r\n    return (\r\n        <div className=\"user-list\">\r\n            <h2>All Users</h2>\r\n            {/* Displaying the error */}\r\n            {error && <div className=\"error\">{error}</div>}\r\n            {/* Mapping through the documents array to display all the users */}\r\n            {documents && documents.map(user => (\r\n                <div key={user.id} className=\"user-list-item\">\r\n                    {user.online && <span className=\"online-user\"></span>}\r\n                    <span>{user.displayName}</span>\r\n                    {/* Displaying the avatar of the user */}\r\n                    <Avatar src={user.photoURL} />\r\n                </div>\r\n            ))}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OnlineUsers","import \"./Login.css\"\r\nimport React, { useState } from 'react'\r\nimport { projectAuth} from \"../../firebase/config\"\r\nimport { useNavigate } from \"react-router-dom\"\r\n/**\r\n * Component: ForgotPassword\r\n *\r\n * This component provides a form for users to request a password reset via email.\r\n * Users provide their email address, and upon submission, they will receive an\r\n * email with instructions for resetting their password.\r\n *\r\n * @returns {JSX.Element} - The JSX element representing the ForgotPassword component.\r\n */\r\nfunction ForgotPassword() {\r\n  const navigate= useNavigate()\r\n    const [email, setEmail] = useState('')\r\n/**\r\n * Function to handle the form submission for requesting a password reset.\r\n *\r\n * @param {Event} e - The form submit event.\r\n */\r\n    const handleResetSubmit =async(e)=>{\r\n      e.preventDefault()\r\n      projectAuth.sendPasswordResetEmail(email).then(\r\n        data=>{\r\n          alert(\"Check Your Email\")\r\n          navigate(\"./login\")\r\n        }\r\n      ).catch(err=>\r\n      {\r\n        alert(err.code)\r\n      }\r\n      )\r\n    }\r\n    //returning the template\r\n  return (\r\n      <form onSubmit={handleResetSubmit} className=\"auth-form\">\r\n          <h2>Forgot Password...</h2>\r\n          <label>\r\n              <span>email:</span>\r\n              <input\r\n                  required\r\n                  type=\"email\"\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  value={email}\r\n              />\r\n          </label>\r\n         <button className=\"btn\">Reset Password</button>\r\n      </form>\r\n  )\r\n}\r\n\r\nexport default ForgotPassword","import { BrowserRouter, Route, Routes, Navigate } from 'react-router-dom'\nimport { useAuthContext } from './hooks/useAuthContext'\n\n// styles\nimport './App.css'\n\n// pages & components\nimport Dashboard from './pages/dashboard/Dashboard'\nimport Create from './pages/create/Create'\nimport Login from './pages/login/Login'\nimport Signup from './pages/signup/Signup'\nimport Project from './pages/project/Project'\nimport Navbar from './components/Navbar'\nimport Sidebar from './components/Sidebar'\nimport OnlineUsers from './components/OnlineUsers'\nimport ForgotPassword from './pages/login/ForgotPassword'\nimport React, { Suspense, lazy } from 'react'\n//import Quote from './pages/quote/Quote'\nconst Quote = lazy(() => import('./pages/quote/Quote'))\n/**\n * App Component\n *\n * This is the main application component that handles routing and rendering various pages and components.\n */\nfunction App() {\n  const { authIsReady, user } = useAuthContext()\n  //returning the template\n  return (\n    <div className=\"App\">\n      {authIsReady && (\n        <BrowserRouter>\n          {user && <Sidebar />}\n          <div className=\"container\">\n            <Navbar />\n            <Routes>\n              {/* Different Routes */}\n              <Route\n                path=\"/\" element={user ? <Dashboard /> : <Navigate to=\"/login\" />}\n              />\n\n              <Route\n                path=\"/create\" element={user ? <Create /> : <Navigate to=\"/login\" />}\n              />\n\n              <Route\n                path=\"/quote\" element={user ? <Suspense fallback={<div>Loading...</div>}><Quote />   </Suspense> : <Navigate to=\"/login\" />}\n              />\n\n              <Route\n                path=\"/reset\" element={!user ? <ForgotPassword /> : <Navigate to=\"/login\" />}\n              />\n\n              <Route\n                path=\"/projects/:id\" element={user ? <Project /> : <Navigate to=\"/login\" />}\n              />\n              <Route\n                path=\"/login\" element={user ? <Navigate to=\"/\" /> : <Login />}\n              />\n              <Route\n                path=\"/signup\" element={user ? <Navigate to=\"/\" /> : <Signup />}\n              />\n            </Routes>\n          </div>\n          {user && <OnlineUsers />}\n        </BrowserRouter>\n      )}\n    </div>\n  );\n}\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {AuthContextProvider} from\"./context/AuthContext\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthContextProvider>\n    <App />\n    </AuthContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}